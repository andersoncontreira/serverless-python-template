servers:
- url: http://localhost:5000
  description: Development server
- url: http://localhost:5000
  description: Development server
paths:
  /alive:
    get:
      summary: Service Health Method
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '424':
          description: Failed dependency response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
        '503':
          description: Service unavailable response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheck'
  /v1/product:
    get:
      summary: Product List
      parameters:
      - name: limit
        in: query
        description: List limit
        required: false
        schema:
          type: int
          example: 20
      - name: offset
        in: query
        description: List offset
        required: false
        schema:
          type: int
          example: 0
      - name: fields
        in: query
        description: Filter fields with comma
        required: false
        schema:
          type: string
          example: null
      - name: order_by
        in: query
        description: Ordination of list
        required: false
        schema:
          type: string
          enum:
          - asc
          - desc
      - name: sort_by
        in: query
        description: Sorting of the list
        required: false
        schema:
          type: string
          example: id
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HateosProductListResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListErrorResponse'
    post:
      summary: Product Create
      requestBody:
        description: Product to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCreateErrorResponse'
  /v1/product/{uuid}:
    get:
      summary: Product Get
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      - name: fields
        in: query
        description: Filter fields with comma
        required: false
        schema:
          type: string
          example: null
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HateosProductGetResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductGetErrorResponse'
    put:
      summary: Complete Product Update
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      requestBody:
        description: Product to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCompleteUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
    patch:
      summary: Soft Product Update
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      requestBody:
        description: Product field to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSoftUpdateRequest'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductUpdateErrorResponse'
    delete:
      summary: Soft Product Delete
      parameters:
      - in: path
        name: uuid
        description: Product Id
        required: true
        schema:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteResponse'
        4xx:
          description: Error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
        5xx:
          description: Service fail response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSoftDeleteErrorResponse'
info:
  title: serverless-python-template
  version: 1.0.0
openapi: 3.0.2
components:
  schemas:
    Entry:
      type: object
      properties:
        duration:
          type: string
          example: '0:00:00.013737'
        tags:
          type: array
          items:
            type: string
            example: db
        status:
          type: string
          example: healthy
    EntryData:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/Entry'
    HealthCheck:
      type: object
      properties:
        entries:
          $ref: '#/components/schemas/EntryData'
        total_duration:
          type: string
          example: '0:00:00.013737'
        status:
          type: string
          example: healthy
    Product:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 4bcad46b-6978-488f-8153-1c49f8a45244
        description:
          type: string
          example: Common Pencil Description
        updated_at:
          type: string
          format: date-time
        sku:
          type: integer
          example: 1
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Common Pencil
        deleted_at:
          type: string
          format: date-time
        supplier_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
        active:
          type: integer
          enum:
          - 0
          - 1
    Meta:
      type: object
      properties:
        first:
          type: string
          format: url
        href:
          type: string
          format: url
        previous:
          type: string
          format: url
        next:
          type: string
          format: url
        last:
          type: string
          format: url
    RequestControl:
      type: object
      properties:
        limit:
          type: integer
        total:
          type: integer
        count:
          type: integer
        offset:
          type: integer
      required:
      - limit
    HateosProductListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        success:
          type: boolean
          example: true
        meta:
          $ref: '#/components/schemas/Meta'
        label:
          type: string
          example: common.success
        control:
          $ref: '#/components/schemas/RequestControl'
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductListErrorResponse:
      type: object
      properties:
        details:
          type: string
        success:
          type: boolean
          example: false
        label:
          type: string
          example: common.error.list_error
        code:
          type: integer
          example: 11
        trace:
          type: string
        message:
          type: string
          example: Unable to return the list data, please review your request
        params:
          type: array
          items:
            type: string
      required:
      - code
    Link:
      type: object
      properties:
        href:
          type: string
        rel:
          type: string
        method:
          type: string
    HateosProductGetResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Product'
        success:
          type: boolean
          example: true
        meta:
          $ref: '#/components/schemas/Meta'
        label:
          type: string
          example: common.success
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Success
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductGetErrorResponse:
      type: object
      properties:
        details:
          type: string
        success:
          type: boolean
          example: false
        label:
          type: string
          example: common.error.find_error
        code:
          type: integer
          example: 14
        trace:
          type: string
        message:
          type: string
          example: Unable to find the record
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductCreateRequest:
      type: object
      properties:
        description:
          type: string
          example: Common Pencil description
        sku:
          type: integer
          example: 1
        name:
          type: string
          example: Common Pencil
        supplier_id:
          type: integer
          example: 1
        active:
          type: integer
          enum:
          - 0
          - 1
    ProductCreateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Product'
        success:
          type: boolean
          example: true
        label:
          type: string
          example: common.success
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductCreateErrorResponse:
      type: object
      properties:
        details:
          type: string
        success:
          type: boolean
          example: false
        label:
          type: string
          example: common.error.create_error
        code:
          type: integer
          example: 17
        trace:
          type: string
        message:
          type: string
          example: Unable to create the record
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductCompleteUpdateRequest:
      type: object
      properties:
        description:
          type: string
          example: Common Pencil description
        sku:
          type: integer
          example: 1
        name:
          type: string
          example: Common Pencil
        supplier_id:
          type: integer
          example: 1
        active:
          type: integer
          enum:
          - 0
          - 1
    ProductUpdateResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Product'
        success:
          type: boolean
          example: true
        label:
          type: string
          example: common.success
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductUpdateErrorResponse:
      type: object
      properties:
        details:
          type: string
        success:
          type: boolean
          example: false
        label:
          type: string
          example: common.error.update_error
        code:
          type: integer
          example: 18
        trace:
          type: string
        message:
          type: string
          example: Unable to update the record
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductSoftUpdateRequest:
      type: object
      properties:
        field:
          type: string
          example: value
    ProductSoftDeleteResponse:
      type: object
      properties:
        data:
          type: object
          example:
            deleted: true
        success:
          type: boolean
          example: true
        label:
          type: string
          example: common.success
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Success
        params:
          type: array
          items:
            type: string
      required:
      - code
    ProductSoftDeleteErrorResponse:
      type: object
      properties:
        details:
          type: string
        success:
          type: boolean
          example: false
        label:
          type: string
          example: common.error.update_error
        code:
          type: integer
          example: 18
        trace:
          type: string
        message:
          type: string
          example: Unable to update the record
        params:
          type: array
          items:
            type: string
      required:
      - code
